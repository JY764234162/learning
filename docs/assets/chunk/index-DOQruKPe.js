import{r as y,j as s,T as S}from"../../index-DgZa82hz.js";import{a as T,u as v}from"./react-D3OjOs9s.js";import{A}from"./index-B-9SwJtV.js";import{S as N}from"./index-CwMPLK97.js";import{C as f}from"./index-BGPQKQBB.js";import"./ExclamationCircleFilled-BncIX7fd.js";import"./InfoCircleFilled-FVYNa2Uj.js";const b=T({listId:null,index:null,position:null}),{Title:C,Paragraph:m,Text:g}=S;function R(){const[r,u]=y.useState({list1:[1,2,3],list2:[4,5,6]}),[d,i]=v(b),n=(a,o,c,h)=>{u(x=>{const l={...x};if(a===o){const t=[...x[a]],e=t.indexOf(c);t.splice(e,1),t.splice(h,0,c),l[a]=t}else{l[a]=x[a].filter(e=>e!==c);const t=[...x[o]];t.splice(h,0,c),l[o]=t}return l})};return s.jsxs("div",{style:{maxWidth:"800px",margin:"0 auto",padding:"20px"},children:[s.jsx(C,{level:2,children:"拖拽列表演示"}),s.jsx(A,{type:"info",message:"什么是拖拽列表？",description:"拖拽列表是一种允许用户通过拖放操作重新排序或在不同列表间移动项目的交互组件。它提供了直观的用户体验，常用于任务管理、文件组织等场景。",showIcon:!0,style:{marginBottom:"20px"}}),s.jsxs(N,{direction:"vertical",style:{width:"100%"},children:[s.jsx(f,{title:"演示效果",children:s.jsxs("div",{className:"drag-list-container",children:[s.jsx(D,{id:"list1",items:r.list1,onMove:n,setDropPosition:i,dropPosition:d}),s.jsx(D,{id:"list2",items:r.list2,onMove:n,setDropPosition:i,dropPosition:d})]})}),s.jsxs(f,{title:"功能说明",children:[s.jsx(m,{children:s.jsx(g,{strong:!0,children:"实现原理："})}),s.jsxs("ul",{children:[s.jsx("li",{children:"使用 HTML5 原生拖拽 API"}),s.jsx("li",{children:"通过 jotai 状态管理拖拽位置"}),s.jsx("li",{children:"CSS 过渡动画提升用户体验"}),s.jsx("li",{children:"支持列表内排序和跨列表拖拽"})]}),s.jsx(m,{children:s.jsx(g,{strong:!0,children:"关键特性："})}),s.jsxs("ul",{children:[s.jsx("li",{children:"拖拽时显示插入位置指示器"}),s.jsx("li",{children:"平滑的动画过渡效果"}),s.jsx("li",{children:"支持跨列表项目移动"}),s.jsx("li",{children:"自适应列表高度"})]}),s.jsx(m,{children:s.jsx(g,{strong:!0,children:"使用场景："})}),s.jsxs("ul",{children:[s.jsx("li",{children:"任务看板"}),s.jsx("li",{children:"文件管理器"}),s.jsx("li",{children:"优先级排序"}),s.jsx("li",{children:"分类管理"})]})]})]})]})}const D=({id:r,items:u,onMove:d,setDropPosition:i,dropPosition:n})=>{const a=(l,t)=>{l.dataTransfer.setData("application/json",JSON.stringify({listId:r,item:t}))},o=l=>{l.preventDefault();const t=Number(l.currentTarget.getAttribute("data-index")),e=l.currentTarget.getBoundingClientRect(),j=e.top+e.height/2;l.clientY<j?i({listId:r,index:t,position:"top"}):i({listId:r,index:t,position:"bottom"})},c=()=>{i(null)},h=(l,t)=>{try{const e=JSON.parse(l.dataTransfer.getData("application/json")),{listId:j,item:p}=e;(n==null?void 0:n.position)==="top"?d(j,r,p,t-1<0?0:t-1):d(j,r,p,t)}catch(e){console.error("Drop error:",e)}finally{i(null)}},x=()=>{i(null)};return s.jsxs("div",{className:"drag-list",children:[s.jsxs("h3",{children:["列表 ",r]}),u.map((l,t)=>s.jsx("div",{"data-id":r,"data-index":t,className:`drag-list-item ${(n==null?void 0:n.index)===t&&(n==null?void 0:n.listId)===r?`drop-${n.position}`:""}`,draggable:!0,onDragStart:e=>a(e,l),onDragOver:o,onDrop:e=>h(e,t),onDragLeave:c,onDragEnd:x,children:l},l))]})};export{R as default};
